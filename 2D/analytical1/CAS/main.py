from e_proj import *
from mpmath import *
import time
import datetime
import sys


n=4


ts=time.time()
st = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')
fname=str(n)+'haar_scale'+".txt"
fo = open(fname, "w")


K=matrix([[2.35829815682523e-25 ,  0.00994718394324346,  -7.76992957826401e-19,  3.26992563093496e-25 ,  0.00994718394324346,  -6.64201123417261e-19,  -9.96784055891622e-25 ,  0.00994718394324346,  -7.76993751746462e-19,  -8.52784284119489e-25 ,  0.00994718394324347,  -7.76994497907006e-19],
[-0.00994718394324346,  2.21892110776078e-26  ,  0.00994718394324346,  -0.00994718394324346             ,  -0.0625  ,  0.00994718394324346 ,  -0.00994718394324345              ,  -0.125  ,  0.00994718394324347 ,  -0.00994718394324345             ,  -0.1875  ,  0.00994718394324347],
[7.76993151494357e-19,  -0.00994718394324346,  -1.21584137111272e-25,  7.76993254587903e-19,  -0.00994718394324346,  -6.37930606856081e-20 ,  7.76994277537585e-19,  -0.00994718394324346 ,  1.28012963345463e-24 ,  7.76993706012929e-19,  -0.00994718394324345 ,  1.11060264577781e-24],
[6.37930546179987e-20 ,  0.00994718394324346,  -7.76992688991248e-19,  1.73013601168934e-26 ,  0.00994718394324346,  -7.76992774302918e-19,  -1.42530809187812e-24 ,  0.00994718394324346,  -6.64203020293978e-19,  -6.76457033058176e-25 ,  0.00994718394324346,  -7.76993841018202e-19],
[-0.00994718394324346              ,  0.0625  ,  0.00994718394324346,  -0.00994718394324346                 ,  0.0  ,  0.00994718394324346 ,  -0.00994718394324346             ,  -0.0625  ,  0.00994718394324346 ,  -0.00994718394324345              ,  -0.125  ,  0.00994718394324347],
[ 6.6420061372648e-19,  -0.00994718394324346,  -1.56995266113932e-25,  7.76992497285392e-19,  -0.00994718394324346 ,  1.31724702239941e-25  ,  7.7699371305832e-19,  -0.00994718394324346,  -6.37911513792375e-20 ,  7.76993957853229e-19,  -0.00994718394324346 ,  1.83437820014441e-24],
[1.20948995201731e-24 ,  0.00994718394324345,  -7.76993747605679e-19,  6.37943296703565e-20 ,  0.00994718394324346 ,  -7.7699429835228e-19 ,  1.38322423934569e-25 ,  0.00994718394324346,  -7.76995298672669e-19,  -1.15213960230797e-26 ,  0.00994718394324346,  -6.64204440087149e-19],
[-0.00994718394324346               ,  0.125  ,  0.00994718394324346,  -0.00994718394324346              ,  0.0625  ,  0.00994718394324346 ,  -0.00994718394324346                 ,  0.0  ,  0.00994718394324346 ,  -0.00994718394324346             ,  -0.0625  ,  0.00994718394324346],
[7.76994445164683e-19,  -0.00994718394324347,  -1.53946921765877e-24,  6.64202306538137e-19,  -0.00994718394324346,  -1.63657920574896e-24  ,  7.7699583035448e-19,  -0.00994718394324346 ,  3.74552661488327e-26 ,  7.76995194216892e-19,  -0.00994718394324346,  -6.37925765119091e-20],
[1.15480072044712e-24 ,  0.00994718394324345,  -7.76994145201891e-19,  1.16717158297089e-24 ,  0.00994718394324345,  -7.76993661429773e-19 ,  6.37925151323223e-20 ,  0.00994718394324346,  -7.76995482239435e-19 ,  1.38322423934569e-25 ,  0.00994718394324346,  -7.76995298672669e-19],
[-0.00994718394324347              ,  0.1875  ,  0.00994718394324345,  -0.00994718394324346               ,  0.125  ,  0.00994718394324346 ,  -0.00994718394324346              ,  0.0625  ,  0.00994718394324346 ,  -0.00994718394324346                 ,  0.0  ,  0.00994718394324346],
[7.76994359912086e-19,  -0.00994718394324347 ,  -9.1058085429018e-25,  7.76994254455577e-19,  -0.00994718394324347,  -1.81611396786986e-24 ,  6.64204083470895e-19,  -0.00994718394324346,  -6.85289468581509e-26  ,  7.7699583035448e-19,  -0.00994718394324346 ,  3.74552661488327e-26]])
# E=matrix([[0]*n*3]).transpose()
# for i in range(n*3):
# 	if i%3==0:
# 		E[i]=1.0/pow(n,0.5)
E=project_E_CAS(n)
B=zeros(3*n,1)
G=zeros(3*n,1)


print "K="
print  K
print "E=", E
fo.write("n="+str(n)+"\n")
fo.write("K="+str(K)+"\n")
fo.write("E="+str(E)+"\n")
B_pre=B+1


iter = 1
while(not diag(B)*B-diag(B_pre)*B_pre == zeros(3*n,1)):
	print diag(B)*B-diag(B_pre)*B_pre
	print "B"+str(iter)+"=", B
	fo.write("B"+str(iter)+"="+str(B)+"\n")
	B_pre=B
	B=E+K*B_pre

	# if int(input("Please enter an integer: "))==1:
	# 	check=True
	# else:
	# 	check=False
	iter+=1
print "\n\n\nB"+str(iter)+"=", B*pow(n,0.5)
# fo.write("\n\n\nB"+str(iter)+"="+str(B*pow(n,0.5)))
